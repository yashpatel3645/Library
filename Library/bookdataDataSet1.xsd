<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="bookdataDataSet1" targetNamespace="http://tempuri.org/bookdataDataSet1.xsd" xmlns:mstns="http://tempuri.org/bookdataDataSet1.xsd" xmlns="http://tempuri.org/bookdataDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="bookdataConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="bookdataConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Library.Properties.Settings.GlobalReference.Default.bookdataConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="bookdataTableAdapter" GeneratorDataComponentClassName="bookdataTableAdapter" Name="bookdata" UserDataComponentName="bookdataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bookdataConnectionString (Settings)" DbObjectName="dbo.bookdata" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[bookdata] WHERE (([Book_ID] = @Original_Book_ID) AND ([Book_name] = @Original_Book_name) AND ([Auther] = @Original_Auther) AND ([Semester] = @Original_Semester))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Book_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Book_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Book_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Book_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Auther" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Auther" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Semester" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Semester" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[bookdata] ([Book_ID], [Book_name], [Auther], [Semester]) VALUES (@Book_ID, @Book_name, @Auther, @Semester);
SELECT Book_ID, Book_name, Auther, Semester FROM bookdata WHERE (Book_ID = @Book_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Book_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Book_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Book_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Book_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Auther" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Auther" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Semester" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Semester" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Book_ID, Book_name, Auther, Semester FROM dbo.bookdata</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[bookdata] SET [Book_ID] = @Book_ID, [Book_name] = @Book_name, [Auther] = @Auther, [Semester] = @Semester WHERE (([Book_ID] = @Original_Book_ID) AND ([Book_name] = @Original_Book_name) AND ([Auther] = @Original_Auther) AND ([Semester] = @Original_Semester));
SELECT Book_ID, Book_name, Auther, Semester FROM bookdata WHERE (Book_ID = @Book_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Book_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Book_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Book_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Book_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Auther" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Auther" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Semester" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Semester" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Book_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Book_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Book_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Book_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Auther" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Auther" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Semester" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Semester" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Book_ID" DataSetColumn="Book_ID" />
              <Mapping SourceColumn="Book_name" DataSetColumn="Book_name" />
              <Mapping SourceColumn="Auther" DataSetColumn="Auther" />
              <Mapping SourceColumn="Semester" DataSetColumn="Semester" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="bookdataDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="bookdataDataSet1" msprop:Generator_UserDSName="bookdataDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="bookdata" msprop:Generator_TableClassName="bookdataDataTable" msprop:Generator_TableVarName="tablebookdata" msprop:Generator_TablePropName="bookdata" msprop:Generator_RowDeletingName="bookdataRowDeleting" msprop:Generator_RowChangingName="bookdataRowChanging" msprop:Generator_RowEvHandlerName="bookdataRowChangeEventHandler" msprop:Generator_RowDeletedName="bookdataRowDeleted" msprop:Generator_UserTableName="bookdata" msprop:Generator_RowChangedName="bookdataRowChanged" msprop:Generator_RowEvArgName="bookdataRowChangeEvent" msprop:Generator_RowClassName="bookdataRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Book_ID" msprop:Generator_ColumnVarNameInTable="columnBook_ID" msprop:Generator_ColumnPropNameInRow="Book_ID" msprop:Generator_ColumnPropNameInTable="Book_IDColumn" msprop:Generator_UserColumnName="Book_ID" type="xs:int" />
              <xs:element name="Book_name" msprop:Generator_ColumnVarNameInTable="columnBook_name" msprop:Generator_ColumnPropNameInRow="Book_name" msprop:Generator_ColumnPropNameInTable="Book_nameColumn" msprop:Generator_UserColumnName="Book_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Auther" msprop:Generator_ColumnVarNameInTable="columnAuther" msprop:Generator_ColumnPropNameInRow="Auther" msprop:Generator_ColumnPropNameInTable="AutherColumn" msprop:Generator_UserColumnName="Auther">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Semester" msprop:Generator_ColumnVarNameInTable="columnSemester" msprop:Generator_ColumnPropNameInRow="Semester" msprop:Generator_ColumnPropNameInTable="SemesterColumn" msprop:Generator_UserColumnName="Semester">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:bookdata" />
      <xs:field xpath="mstns:Book_ID" />
    </xs:unique>
  </xs:element>
</xs:schema>